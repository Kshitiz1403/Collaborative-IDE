version: '3.9'
services:
  ideimg:
    container_name: ideimg-template
    build:
      context: .
      dockerfile: Dockerfile.image
    image: ideimg
    command: ['docker', 'stop', 'ideimg-template']
    networks:
      - ide-network
    # profiles:
    #   - donotstart

  nginx:
    image: nginx
    ports:
      - 9020:80
    networks:
      - ide-network
    volumes:
      - ./client/build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server

  client:
    build: ./client
    volumes:
      - ./client/build:/client/build

  server:
    build: ./server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./projects:/projects
    command: bash -c "yarn run start"
    ports:
      - 6040:4000
    depends_on:
      - mysql
      - redis
    networks:
      - ide-network
    environment:
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGO=${JWT_ALGO}
      - ORACLE_APPROVED_SENDER=${ORACLE_APPROVED_SENDER}
      - ORACLE_EMAIL_USERNAME=${ORACLE_EMAIL_USERNAME}
      - ORACLE_EMAIL_PASSWORD=${ORACLE_EMAIL_PASSWORD}
      - ORACLE_EMAIL_PORT=${ORACLE_EMAIL_PORT}
      - ORACLE_EMAIL_HOST=${ORACLE_EMAIL_HOST}
      - OCI_COMPARTMENT_ID=${OCI_COMPARTMENT_ID}
      - OCI_BUCKET_NAME=${OCI_BUCKET_NAME}
      - OCI_TENANCY=${OCI_TENANCY}
      - OCI_USER=${OCI_USER}
      - OCI_FINGERPRINT=${OCI_FINGERPRINT}
      - OCI_PRIVATE_KEY=${OCI_PRIVATE_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=4000
      - DOCKER_IMAGE=ideimg

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_USER: root
      MYSQL_DATABASE: ide
      MYSQL_PASSWORD: 'admin$@456'
      MYSQL_ROOT_PASSWORD: 'admin'
    volumes:
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ide-db:/var/lib/mysql
    # Expose mysql to the outer world so we can access from remote machine
    ports:
      - 6041:3306
    networks:
      - ide-network

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - ide-network

networks:
  ide-network:

volumes:
  ide-public-data:
    driver: local
  ide-db:
